
# Write a program to prompt the user for temperature in Celsius, convert 
# the temperature to Fahrenheit, and print temperature in Fahrenheit. 
temp = int(input("Input the temperature in Celsius: "))
temp_in_f = (temp*(9/5))+32
print(round(temp_in_f))
 
******************************************************************************************************************************************************************* 

# Modify exercise 1 to print a message when F > 90 and F < 32
temp = int(input("Input the temperature in Celsius: "))
temp_in_f = (temp*(9/5))+32
if temp_in_f >90:
    print('F>90')
elif temp_in_f<32:
    print('F<32')
else:
    print(round(temp_in_f))
    
*******************************************************************************************************************************************************************

# Write a function to calculate the solution to a quadratic equation
# https://www.mathsisfun.com/algebra/quadratic-equation.html
# Prompt the user to the coefficients a, b, and c. 
import math
a= float(input("Enter coeff of x^2:"))
b= float(input("Enter coeff of x:"))
c= float(input("Enter constant:"))

root = math.sqrt((b*b)-4*a*c)
solution1 = (-b+(root))/2*a
solution2 = (-b-(root))/2*a
print (solution1)
print (solution2)    

*******************************************************************************************************************************************************************

# Exercise 1
def is_palindrome(input_string):
    # Complete this function to determine if the input_string is a palindrome. Return True or False
    # Use square brackets to reverse the input_string! Make sure to lower the input string before testing!
    
    # YOUR CODE HERE
    pali = input_string.lower()
    rev_pali = pali[::-1]
    if pali == rev_pali:
        return True
    else:
        return False
        
*******************************************************************************************************************************************************************

# Exercise 2: Season from Month and Day
def determine_season(month, day):
   # The year is divided into four season: spring, summer, fall (or autumn) and winter.
   # While the exact dates that the seasons change vary a little bit from year to
   # year because of the way that the calender is constructed, we will use the following
   # dates for this exercise:
   # Season  -- First Day
   # Spring  -- March 20
   # Summer  -- June 21
   # Fall  -- September 22
   # Winter    -- December 21
   # Complete this function which takes in as inputs a month and day. It should
   # output the season.
   # input 1: month -- str
   # input 2: day -- int
   # output: month -- str (Spring, Summer, Fall, Winter)
   # YOUR CODE HERE:
   
   if month in ('January', 'February', 'March'):
       season = 'Winter'
   elif month in ('April', 'May', 'June'):
       season = 'Spring'
   elif month in ('July', 'August', 'September'):
       season = 'Summer'
   else:
       season = 'Fall'

   if (month == 'March') and (day > 19):
       season = 'Spring'
   elif (month == 'June') and (day > 20):
       season = 'Summer'
   elif (month == 'September') and (day > 21):
       season = 'Fall'
   elif (month == 'December') and (day > 20):
       season = 'Winter'

   return season
   return("Winter")
        
*******************************************************************************************************************************************************************

#Exercise 3: Check a password

def check_password(password):
    # In this exercise you will complete this function to determine whether or not
    # a password is good. We will define a good password to be a one that is at least
    # 8 characters long and contains at least one uppercase letter, at least one lowercase
    # letter, and at least one number. This function should return True if the password
    # passed to it as its only parameter is good. Otherwise it should return False.
    # input: password (str)
    # output: True or False (bool)
    # YOUR CODE HERE
    
    import re
    if len(password) >=8:
        if re.search(r'[A-Z]', password):
            if re.search(r'[a-z]', password):
                if re.search(r'[0-9]', password):
                    return True
    
                else:
                    return False  
            else:        
                return False  
        else:
            return False  
    else:
        return False  
        
*******************************************************************************************************************************************************************

